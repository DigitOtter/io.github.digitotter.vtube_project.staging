app-id: com.digitotter.vtube_project
base: org.godotengine.godot.BaseApp
base-version: "3.5-23.08"
runtime: org.freedesktop.Platform
runtime-version: "23.08"
sdk: org.freedesktop.Sdk
sdk-extensions: [ "org.freedesktop.Sdk.Extension.rust-nightly", "org.freedesktop.Sdk.Extension.llvm18" ]
command: vtube_project.sh
#rename-icon: icon

build-options:
  append-path: /usr/lib/sdk/rust-nightly/bin
  # Allow internet access during build
  build-args:
      - --share=network
  env:
    CARGO_HOME: /run/build/vtube_project/cargo

finish-args:
  - --share=ipc
  - --socket=x11
  - --filesystem=home
  # For texture sharing
  - --filesystem=/tmp
  # Access external VMC senders
  - --share=network
  # Use `all` to access webcam, `shm` for texture_share_vk
  # TODO: Is there a better way to access webcams without requiring access to all devices
  - --device=all
  - --device=shm

modules:
  - python3-scons.json

  # OpenCv
  - name: opencv
    buildsystem: simple
    sources:
      - type: archive
        url: https://github.com/opencv/opencv/archive/refs/tags/4.10.0.tar.gz
        sha256: b2171af5be6b26f7a06b1229948bbb2bdaa74fcf5cd097e0af6378fce50a6eb9
        dest-filename: opencv-4-10.tar.gz
    build-commands:
      - cmake -GNinja -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/app -DBUILD_JAVA=OFF -DBUILD_PERF_TESTS=OFF -DBUILD_TESTS=OFF -DBUILD_opencv_apps=OFF
      - cmake --build build
      # Make OpenCV available to GDMP build in vtube_project module
      - cmake --install build --strip

  # Godot
  - name: godot
    buildsystem: simple

    sources:
      - type: git
        url: https://github.com/DigitOtter/vtube-project.git
        commit: 5a16c2e5e0a4d59ccd3c8fa476a8158f20a8ba0d

      # Link to opencv
      - type: patch
        paths:
          - gdmp_build.patch

    build-commands:
      # Build and install texture_share_vk
      - cd third_party && cmake -S texture-share-vk -B build/texture_share_vk -DCMAKE_INSTALL_PREFIX=/app -DCMAKE_BUILD_TYPE=Release
      - cd third_party && cmake --build build/texture_share_vk && cmake --install build/texture_share_vk --strip
      # Build dependencies without texture_share_vk
      - ./CI/build_dependencies.sh -t
      # Install godot and dependencies
      - mkdir -p /app/vtube_project
      # Install libraries
      - find -L addons -name "*.so" -exec install {} /app/lib/ \;
      # Install base godot
      - install -T third_party/godot/bin/godot.linuxbsd.template_release.x86_64 /app/bin/godot-runner

  # vtube_project data
  - name: vtube_project
    buildsystem: simple

    sources:
      # vtube_project data
      - type: file
        path: vtube_project.pck
        dest: bin/
      # Startup script
      - type: file
        path: vtube_project.sh
        dest: bin/

    build-commands:
      - mkdir -p /app/vtube_project
      # vtube_project data
      - install -t /app/vtube_project/ ./bin/vtube_project.pck
      # Startup script
      - install -t /app/bin/ ./bin/vtube_project.sh
      # Cleanup unused opencv files
      - rm -rf /app/**/opencv4
